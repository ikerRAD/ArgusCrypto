services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-database}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-database}
      POSTGRES_DB: ${POSTGRES_DB:-database}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    profiles:
      - database
      - backend
      - app
      - mq
      - all

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-database}:${POSTGRES_PASSWORD:-database}@db:5432/${POSTGRES_DB:-database}"
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    volumes:
      - ./backend:/app
    profiles:
      - backend
      - app
      - all

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    depends_on:
      - backend
    env_file:
      - .env
    ports:
      - "${DASHBOARD_PORT:-8501}:${DASHBOARD_PORT:-8501}"
    volumes:
      - ./dashboard:/app
    profiles:
      - app
      - all

  rabbitmq:
    image: rabbitmq:3-management
    depends_on:
      - db
    environment:
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_MANAGEMENT_PORT: ${RABBITMQ_MANAGEMENT_PORT:-15672}
      RABBITMQ_DEFAULT_USER: ${CELERY_BROKER_USER:-celery}
      RABBITMQ_DEFAULT_PASS: ${CELERY_BROKER_PASSWORD:-celery}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    profiles:
      - mq
      - all

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env
    command: celery -A app.tasks beat --loglevel=error
    entrypoint: []
    profiles:
      - mq
      - all

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env
    command: celery -A app.tasks worker --loglevel=error
    entrypoint: []
    profiles:
      - mq
      - all

volumes:
  db_data: